name: Docker

on:
  workflow_dispatch:
  schedule:
    - cron: '25 23 * * 0'
  push:
    branches: [ "master" ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: bratkartoffel/teamspeak3
  IMAGE_DESCRIPTION: teamspeak3 running on alpine in docker


jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@1b05615854632b887b69ae1be8cbefe72d3ae423 # v2.6.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            auth.docker.io:443
            dl-cdn.alpinelinux.org:443
            files.teamspeak-services.com:443
            github.com:443
            index.docker.io:443
            production.cloudflare.docker.com:443
            registry-1.docker.io:443

      - name: Checkout repository
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            latest
          labels: |
            org.opencontainers.image.authors=Simon Frankenberger <simon-docker@fraho.eu>
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.title=${{ env.IMAGE_DESCRIPTION }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.url=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.source=${{ github.repositoryUrl }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

